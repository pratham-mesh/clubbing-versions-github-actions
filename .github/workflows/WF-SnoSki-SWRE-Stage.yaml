name: WF-SnoSki-SWRE-Stage
on:
  workflow_run:
    workflows:
      - ACI-WorkflowContainer-Stage
    types:
      - completed

jobs:
  use_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Fetch Triggering Workflow Details
        id: fetch-run-details
        run: |
          # Fetch details of the triggering workflow using GitHub API
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} \
            > run_details.json
          
          # Extract the run_id and log for debugging
          export RUN_ID=$(jq -r '.id' run_details.json)
          echo "Triggered Run ID: $RUN_ID"
          echo "run_id=$RUN_ID" >> $GITHUB_ENV

      - name: Fetch Artifact Name
        id: fetch-artifacts
        run: |
          # Fetch artifacts list from the triggering workflow
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ env.run_id }}/artifacts \
            > artifacts.json
          
          # Extract the first artifact name
          export ARTIFACT_NAME=$(jq -r '.artifacts[0].name' artifacts.json)
          echo "Artifact Name: $ARTIFACT_NAME"
          echo "artifact_name=$ARTIFACT_NAME" >> $GITHUB_ENV

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ./downloads

      - name: Display downloaded file
        run: cat ./downloads/version.txt 

      - name: List Files in Current Directory
        run: ls -l

      - name: Read version from artifact
        run: |
          version=$(cat ./downloads/version.txt)
          echo "Deploying Version: $version"
