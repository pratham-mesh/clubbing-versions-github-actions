name: Reusable Release-Stage

on:
  workflow_dispatch:

jobs:
  TAGImage:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: ACR Tag and Import
        shell: pwsh
        run: |
          # Simulated GitHub environment values
          $env:GITHUB_WORKSPACE = "C:\Test\Repo"
          $env:GITHUB_RUN_NUMBER = "15"
          $env:ACI_BUILD_NO = "47"
          $env:WorkflowName = "my-app"
          $env:environment = "dev"

          # Static sample values
          $AcrLoginServer = "sampleacr.azurecr.io"
          $AcrName = "sampleacr"
          $WorkflowName = $env:WorkflowName
          $BuildNumberOfImage = "WFV_1.0.${env:GITHUB_RUN_NUMBER}-SDKV_1.0.${env:ACI_BUILD_NO}"
          $EnvironmentTag = $env:environment

          $RepositoryName = "$AcrName/$WorkflowName"
          $ImageName = "$AcrName/$WorkflowName"

          # Mocked ACR tag list
          $tags = @("WFV_1.0.15-SDKV_1.0.47-dev", "latest", "prod")

          $TagToDelete = ''
          $ImageFound = $false

          foreach ($tag in $tags) {
            if ($tag -like "*$EnvironmentTag*") {
              $TagToDelete = $tag.Trim()
              Write-Host "Tag to be deleted = $TagToDelete"
              $ImageFound = $true
            }
          }

          if ($ImageFound) {
            $ImageToDelete = "${ImageName}:${TagToDelete}"
            Write-Host "Image to untag - $ImageToDelete"
            # Simulate untag command
            Write-Host "az acr repository untag --name $AcrName --image $ImageToDelete"
          }

          $SourceImage = "${AcrLoginServer}/${AcrName}/${WorkflowName}:${BuildNumberOfImage}"
          $NewImage = "${AcrName}/${WorkflowName}:${BuildNumberOfImage}-${EnvironmentTag}"

          Write-Host "Source Image: $SourceImage"
          Write-Host "New Image: $NewImage"

          # Simulate import
          Write-Host "az acr import --name $AcrName --source $SourceImage --image $NewImage --force"
